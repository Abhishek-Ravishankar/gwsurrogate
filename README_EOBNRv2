Overview
========
Surrogates produced from EOBNRv2 model as implemented in the 
LIGO Analysis Library (LAL) Suite version 
'git hash 59c12886b026c863397f191e6c2ca69ef3498616' with 
'sSub = 0'. 

Surrogate model waveforms are all peak aligned on a finely
sampled temporal grid, with the beginning portions of 
longer waveforms cut off so as to make all waveforms of equal
length. 

Directory and file/data name conventions are summarized in README


Specifics
=========
Waveform training sets are generated from the function call

SimInspiralChooseTDWaveform(phiref, dt, M1, M2,
        s1x, s1y, s1z, s2x, s2y, s2z, fmin, fref, Dist, incl, lambda1, lambda2,
        waveFlags, nonGRparams, ampO, phaseO, approx)

where 

phiref      = 0.0
dt          = 1./sampleRate
M1          = m1
M2          = m2
s1x         = 0.0
s1y         = 0.0 
s1z         = 0.0 
s2x         = 0.0 
s2y         = 0.0 
s2z         = 0.0
fmin        = f0
fref        = 0.0
Dist        --> waveforms later normalized such that || h || = 1
incl        = 0.0
lambda1     = lambda2 = 0.
waveFlags   = None
nonGRparams = None
ampO        = 0
phaseO      = 7
approx      = lalsim.EOBNRv2

The values sampleRate, m1, m2 and f0 are free parameters which define each
surrogates range of validity. Instead of m1 and m2, training set 
waveforms (and surrogates) are described as function of 

  MTot = m1 + m2
  q    = m2/m1,   where m2 >= m1

It is well-known that GWs posses a simple scaling with Mtot, and so
time-domain surrogates are built for dimensionless time 

  t/Mtot

from which h(m1,m2) can be recovered. 

These numbers can be found in each surrogate's info.dat file 
or from the training set metadata.


Surrogate variables
===================
Instead of m1 and m2, surrogates are defined by 

  MTot = m1 + m2
  q    = m2/m1,   where m2 >= m1

This allows a 2D surrogate for (MTot,q) to be specified from 
i) evaluation of q at some fixed Mtot, ii) using known scaling 
relations to get (MTot,q) 


The waveform's length is implicitly set by f0. Surrogates do not 
currently permit setting (or even knowing) the precise value of f0. 
Instead, we quote the typical number of wave cycles from start 
to merger (peak). Future versions are intended to allow for 
direct specification of f0.


Acknowledgements
================
We thank Frank Herrmann and Evan Ochsner for providing python wrappers
for the evaluation of SimInspiralChooseTDWaveform.


